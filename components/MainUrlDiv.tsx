"use client";

import React, { useState } from "react";

import LinkOption from "./common/LinkOption";
import { createUrlServer } from "@/actions/server.actions";

export interface LinkCreated {
  id: number;
  originalLink: string;
  newLink: string;
}

const MainUrlDiv = () => {
  const [linkValue, setLinkValue] = useState(""); // link entered by user
  const [shortLinksArr, setShortLinksArr] = useState<LinkCreated[]>([]); // link generated by api
  const [error, setError] = useState(""); // link entered by user

  const shortenLink = async () => {
    try {
      const response = await createUrlServer(linkValue);
      let newArr = [...shortLinksArr];
      newArr.push({
        id: Math.random(),
        originalLink: linkValue,
        newLink: response.shortUrl,
      });
      setShortLinksArr(newArr);
      setLinkValue("");
    } catch (error: any) {
      setError(error.message);
    }
  };

  return (
    <div className=" bg-shortlyLightestGray">
      <div className="relative flex flex-col gap-4 mx-auto pt-28 py-10 w-[80%]">
        <div
          className={`absolute w-full lg:h-auto -top-[20%] bg-shortlyDarkViolet rounded-lg flex flex-col lg:flex-row bg-shorten-mobile lg:bg-shorten-desktop h-auto px-6 py-5 lg:py-9 lg:px-12 gap-4 items-start`}
        >
          <div className="flex-1 w-full">
            <input
              type="text"
              placeholder="Shoten a link here"
              className="w-full h-12 px-4 py-1 rounded-[4px]"
              value={linkValue}
              onChange={(e: any) => {
                setError("");
                setLinkValue(e.target.value);
              }}
            />

            {error && <div className="mt-1 text-shortlyRed">{error}</div>}
          </div>
          <button
            onClick={shortenLink}
            className="bg-shortlyCyan text-white w-full lg:w-40 rounded-lg p-3"
          >
            Shorten it!
          </button>
        </div>

        {shortLinksArr.length > 0 && (
          <div className="flex flex-col gap-5">
            {shortLinksArr.map((each: LinkCreated) => (
              <LinkOption key={each.id} linkValues={each} />
            ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default MainUrlDiv;
